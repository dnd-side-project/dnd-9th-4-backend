name: Deploy to Amazon EC2 Stage - Develop

on:
  push:
    branches:
      - develop

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: dnd-github-action-s3-dev-bucket
  CODE_DEPLOY_APPLICATION_NAME: dnd-codedeploy-dev-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: dnd-codedeploy-dev-group
  SECRET_URL: ${{ secrets.SECRET_URL }}
  SECRET_USERNAME: ${{ secrets.SECRET_USERNAME }}
  SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: Development

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (2) JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    # (3) Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: clean build -x test

    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        aws-region: ${{ env.AWS_REGION }}

    # (5) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
        # 데이터베이스 환경 변수 활용
        echo "datasource.url=${{ secrets.SECRET_URL }}" >> $GITHUB_ENV
        echo "datasource.username=${{ secrets.SECRET_USERNAME }}" >> $GITHUB_ENV
        echo "datasource.password=${{ secrets.SECRET_PASSWORD }}" >> $GITHUB_ENV
        echo "datasource.driver-class-name=${{ secrets.SECRET_DRIVER_CLASS_NAME }}" >> $GITHUB_ENV
